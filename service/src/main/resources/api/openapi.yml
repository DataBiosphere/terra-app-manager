openapi: 3.0.3
info:
  title: terra-app-manager
  description: terra-app-manager
  version: 0.0.1
paths:
  /status:
    get:
      summary: Check status of the service
      tags: [ public ]
      operationId: getStatus
      security: [ ]
      responses:
        '200':
          $ref: '#/components/responses/SystemStatusResponse'
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/SystemStatusResponse'

  /version:
    get:
      summary: Get version info of the deployed service
      tags: [ public ]
      operationId: getVersion
      security: [ ]
      responses:
        '200':
          description: Version information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionProperties'
        '404':
          description: "Version not configured"
        '500':
          $ref: '#/components/responses/ServerError'

  # README /docs/api_versioning.md
  #
  /api/admin/v1/charts/versions:
    post:
      tags: [ admin ]
      summary: Create new ChartVersion(s) to track
      operationId: createChartVersions
      security: [ ] # TODO: remove this to turn on "security"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChartArray'
      responses:
        '201':
          description: ChartVersion(s) have been successfully created
        '400':
          description: Bad request - invalid ChartVersion(s) provided
        '403':
          description: Request did not come from an admin
        '500':
          $ref: '#/components/responses/ServerError'
    get:
      tags: [ admin ]
      summary: Get ChartVersion(s)
      operationId: getChartVersions
      security: [ ] # TODO: remove this to turn on "security"
      parameters:
        - in: query
          name: chartName
          description: The optional chartName to return. If omitted, will return all chart versions for all charts.
          schema:
            $ref: "#/components/schemas/ChartName"
        - in: query
          name: includeAll
          description: If selected and no chartName is provided, will return all chart versions including inactive ones.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Chart version(s) specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChartArray'
        '403':
          description: Request did not come from an admin
        '500':
          $ref: '#/components/responses/ServerError'

components:
  responses:
    SystemStatusResponse:
      description: A JSON description of the subsystems and their statuses.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemStatus'

    # Error Responses
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    PermissionDenied:
      description: Permission denied
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    NotFound:
      description: Not found (or unauthorized)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'

  schemas:
    ErrorReport:
      type: object
      required: [ message, statusCode ]
      properties:
        message:
          type: string
        statusCode:
          type: integer

    SystemStatus:
      required: [ ok, systems ]
      type: object
      properties:
        ok:
          type: boolean
          description: whether any system(s) need attention
        systems:
          type: object
          additionalProperties:
            type: object
            properties:
              ok:
                type: boolean
              messages:
                type: array
                items:
                  type: string

    VersionProperties:
      type: object
      properties:
        gitTag:
          type: string
        gitHash:
          type: string
        github:
          type: string
        build:
          type: string

    ChartVersion:
      type: object
      required: [ chartName ]
      properties:
        chartName:
          $ref: '#/components/schemas/ChartName'
        chartVersion:
          $ref: '#/components/schemas/ChartNumber'
        appVersion:
          type: string
        activeAt:
          type: string
          format: date-time
        inactiveAt:
          type: string
          format: date-time
    ChartArray:
      type: array
      items:
        $ref: '#/components/schemas/ChartVersion'
    ChartName:
      type: string
      pattern: "^[a-z0-9-]{1,25}$"
      example: "chart-name"
    ChartNumber:
      type: string
      pattern: "^[a-z][a-z]*(([A-Z][a-z]+)*[A-Z]?|([a-z]+[A-Z])*|[A-Z])$"
      example: "chartNumber"


  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

security:
  - bearerAuth: [ ]
